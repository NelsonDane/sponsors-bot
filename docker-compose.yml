services:
  web:
    image: ghcr.io/nelsondane/sponsors-bot-web:latest
    # build:
    #   context: .
    #   dockerfile: Dockerfile.web
    container_name: web
    restart: always
    volumes:
      - ./config.yaml:/app/config.yaml
    ports:
      - 8080:8080
    depends_on:
      - db
      - bot

  cloudflare:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare
    restart: always
    command: tunnel run --token ${CLOUDFLARE_TOKEN}

  bot:
    image: ghcr.io/nelsondane/sponsors-bot:latest
    # build:
    #   context: .
    #   dockerfile: Dockerfile.bot
    # platform: linux/amd64
    container_name: bot
    restart: always
    volumes:
      - ./config.yaml:/app/config.yaml
    depends_on:
      - db

  db:
    image: postgres:17
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=sponsors
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_POLL_INTERVAL=3600
    command:
      - bot
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
